name: Test

on:
  push:
  pull_request:
  schedule:
    - cron: "0 0 * * *"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        php: [7.3, 7.4, 8.0]
        laravel: [7.*, 8.*]
        dependency-version: [prefer-stable]

    name: PHP:${{ matrix.php }}-Laravel:${{ matrix.laravel }}(${{ matrix.dependency-version }})

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick
          tools: composer:v2
          coverage: none

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: dependencies-laravel-${{ matrix.laravel }}-php-${{ matrix.php }}-composer-${{ hashFiles('composer.json') }}
          restore-keys: dependencies-laravel-${{ matrix.laravel }}-php-${{ matrix.php }}-composer-

      - name: Install Composer dependencies
        run: composer update --${{ matrix.dependency-version }} --prefer-dist --no-interaction --no-suggest

      # - name: Wait for container health check
      #   run: while [ "`docker inspect -f {{.State.Health.Status}} 'pepper_pgsql'`" != "healthy" ]; do     sleep 2; done

      # - name: PS
      #   run: docker ps

      - name: Run Tests
        run: ./vendor/bin/paratest -p8 --group sqlite

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: logs
          path: |
            vendor/orchestra/testbench-core/laravel/storage/logs/laravel.log
            log-junit.xml
